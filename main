#include "pch.h"
#include "iostream"
using namespace System;
using namespace std;

void cartas(int x, int y, int carta, int palo)
{
    if (carta == 1)
    {
        Console::SetCursorPosition(x, y); cout << "A"; for (int i = 1; i <= 11; i++) cout << (char)196; cout << (char)191;
        Console::SetCursorPosition(x, y + 1); cout << (char)palo; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 2); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 3); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 4); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 5); cout << (char)179; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 6); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 7); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 8); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 9); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)palo;
        Console::SetCursorPosition(x, y + 10); cout << (char)192; for (int i = 1; i <= 11; i++) cout << (char)196; cout << "A";
    }
    if (carta == 2)
    {
        Console::SetCursorPosition(x, y); cout << carta; for (int i = 1; i <= 11; i++)cout << (char)196;   cout << (char)191;
        Console::SetCursorPosition(x, y + 1); cout << (char)palo; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 2); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 3); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 4); cout << (char)179; for (int i = 1; i <= 5; i++)cout << " "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 5); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 6); cout << (char)179; for (int i = 1; i <= 5; i++)cout << " "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 7); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 8); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 9); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)palo;
        Console::SetCursorPosition(x, y + 10); cout << (char)192; for (int i = 1; i <= 11; i++)cout << (char)196; cout << carta;
    }
    if (carta == 3)
    {
        Console::SetCursorPosition(x, y); cout << carta; for (int i = 1; i <= 11; i++)cout << (char)196;   cout << (char)191;
        Console::SetCursorPosition(x, y + 1); cout << (char)palo; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 2); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 3); cout << (char)179; for (int i = 1; i <= 5; i++)cout << " "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 4); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 5); cout << (char)179; for (int i = 1; i <= 5; i++)cout << " "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 6); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 7); cout << (char)179; for (int i = 1; i <= 5; i++)cout << " "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 8); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 9); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)palo;
        Console::SetCursorPosition(x, y + 10); cout << (char)192; for (int i = 1; i <= 11; i++)cout << (char)196; cout << carta;
    }
    if (carta == 4)
    {
        Console::SetCursorPosition(x, y); cout << carta; for (int i = 1; i <= 11; i++)cout << (char)196;   cout << (char)191;
        Console::SetCursorPosition(x, y + 1); cout << (char)palo; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 2); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 3); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 4); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 5); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 6); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 7); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 8); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 9); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)palo;
        Console::SetCursorPosition(x, y + 10); cout << (char)192; for (int i = 1; i <= 11; i++)cout << (char)196; cout << carta;
    }
    if (carta == 5)
    {
        Console::SetCursorPosition(x, y); cout << carta; for (int i = 1; i <= 11; i++)cout << (char)196;   cout << (char)191;
        Console::SetCursorPosition(x, y + 1); cout << (char)palo; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 2); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 3); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 4); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 5); cout << (char)179; for (int i = 1; i <= 5; i++)cout << " "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 6); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 7); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 8); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 9); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)palo;
        Console::SetCursorPosition(x, y + 10); cout << (char)192; for (int i = 1; i <= 11; i++)cout << (char)196; cout << carta;
    }
    if (carta == 6)
    {
        Console::SetCursorPosition(x, y); cout << carta; for (int i = 1; i <= 11; i++)cout << (char)196;   cout << (char)191;
        Console::SetCursorPosition(x, y + 1); cout << (char)palo; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 2); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 3); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 4); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 5); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 6); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 7); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 8); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 9); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)palo;
        Console::SetCursorPosition(x, y + 10); cout << (char)192; for (int i = 1; i <= 11; i++)cout << (char)196; cout << carta;
    }
    if (carta == 7)
    {
        Console::SetCursorPosition(x, y); cout << carta; for (int i = 1; i <= 11; i++)cout << (char)196;   cout << (char)191;
        Console::SetCursorPosition(x, y + 1); cout << (char)palo; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 2); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 3); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 4); cout << (char)179; for (int i = 1; i <= 5; i++)cout << " "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 5); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 6); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 7); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 8); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 9); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)palo;
        Console::SetCursorPosition(x, y + 10); cout << (char)192; for (int i = 1; i <= 11; i++)cout << (char)196; cout << carta;
    }
    if (carta == 8)
    {
        Console::SetCursorPosition(x, y); cout << "10"; for (int i = 1; i <= 10; i++)cout << (char)196;   cout << (char)191;
        Console::SetCursorPosition(x, y + 1); cout << (char)palo; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 2); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 3); cout << (char)179; for (int i = 1; i <= 5; i++)cout << " "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 4); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 5); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 6); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 7); cout << (char)179; for (int i = 1; i <= 5; i++)cout << " "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 8); cout << (char)179; cout << "  "; cout << (char)palo; for (int i = 1; i <= 5; i++) cout << " "; cout << (char)palo; cout << "  "; cout << (char)179;
        Console::SetCursorPosition(x, y + 9); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)palo;
        Console::SetCursorPosition(x, y + 10); cout << (char)192; for (int i = 1; i <= 11; i++)cout << (char)196; cout << "10";
    }
    if (carta == 9)
    {
        Console::SetCursorPosition(x, y); cout << "J"; for (int i = 1; i <= 11; i++) cout << (char)196; cout << (char)191;
        Console::SetCursorPosition(x, y + 1); cout << (char)palo; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 2); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)179;
        Console::SetCursorPosition(x, y + 3); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)176; cout << (char)179;
        Console::SetCursorPosition(x, y + 4); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)177; cout << (char)179;
        Console::SetCursorPosition(x, y + 5); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)178;  cout << (char)179;
        Console::SetCursorPosition(x, y + 6); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)176; cout << (char)179;
        Console::SetCursorPosition(x, y + 7); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)177; cout << (char)179;
        Console::SetCursorPosition(x, y + 8); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)179;
        Console::SetCursorPosition(x, y + 9); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)palo;
        Console::SetCursorPosition(x, y + 10); cout << (char)192; for (int i = 1; i <= 11; i++) cout << (char)196; cout << "J";
    }
    if (carta == 10)
    {
        Console::SetCursorPosition(x, y); cout << "Q"; for (int i = 1; i <= 11; i++) cout << (char)196; cout << (char)191;
        Console::SetCursorPosition(x, y + 1); cout << (char)palo; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 2); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)176; cout << (char)179;
        Console::SetCursorPosition(x, y + 3); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)177; cout << (char)179;
        Console::SetCursorPosition(x, y + 4); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)179;
        Console::SetCursorPosition(x, y + 5); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)178;  cout << (char)179;
        Console::SetCursorPosition(x, y + 6); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)176; cout << (char)179;
        Console::SetCursorPosition(x, y + 7); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)177; cout << (char)179;
        Console::SetCursorPosition(x, y + 8); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)179;
        Console::SetCursorPosition(x, y + 9); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)palo;
        Console::SetCursorPosition(x, y + 10); cout << (char)192; for (int i = 1; i <= 11; i++) cout << (char)196; cout << "Q";
    }
    if (carta == 11)
    {
        Console::SetCursorPosition(x, y); cout << "K"; for (int i = 1; i <= 11; i++) cout << (char)196; cout << (char)191;
        Console::SetCursorPosition(x, y + 1); cout << (char)palo; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)179;
        Console::SetCursorPosition(x, y + 2); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)179;
        Console::SetCursorPosition(x, y + 3); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)179;
        Console::SetCursorPosition(x, y + 4); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)177; cout << (char)179;
        Console::SetCursorPosition(x, y + 5); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)177;  cout << (char)179;
        Console::SetCursorPosition(x, y + 6); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)176; cout << (char)179;
        Console::SetCursorPosition(x, y + 7); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)176; cout << (char)179;
        Console::SetCursorPosition(x, y + 8); cout << (char)179; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)179;
        Console::SetCursorPosition(x, y + 9); cout << (char)179; for (int i = 1; i <= 11; i++) cout << " "; cout << (char)palo;
        Console::SetCursorPosition(x, y + 10); cout << (char)192; for (int i = 1; i <= 11; i++) cout << (char)196; cout << "K";
    }
}
int intro() {
    //titulo
    int opcion;
    //cout << "\n**************************************************";
    cout << "\n\t\t\t\t==================     ==     ";
    cout << "\n\t\t\t\t              ====    = =     ";
    cout << "\n\t\t\t\t             ====       =     ";
    cout << "\n\t\t\t\t           ====         =     ";
    cout << "\n\t\t\t\t         ====     ============";
    cout << "\n\t\t\t\t       ====            ===    ";
    cout << "\n\t\t\t\t     ====            ==   ==  ";
    cout << "\n\t\t\t\t   ====                 ====  ";
    cout << "\n\t\t\t\t ====                 ==      ";
    cout << "\n\t\t\t\t===                  =======  ";
    //cout << "\n**************************************************";
    //opciones
    Console::SetCursorPosition(25, 13); cout<<"1. Jugar";
    Console::SetCursorPosition(45, 13); cout << "2. Salir del juego";
    cin >> opcion;
    return opcion;
}
int generador() {
    //srand(time(nullptr));
    return 1 + rand() % (11 + 1 - 1);
}

void carta_volteada(int x, int y) {
    Console::SetCursorPosition(x, y); cout <<(char)201; for (int i = 1; i <= 11; i++) cout << (char)205; cout << (char)187;
    Console::SetCursorPosition(x, y + 1); cout << (char)186; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)186;
    Console::SetCursorPosition(x, y + 2); cout << (char)186; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)186;
    Console::SetCursorPosition(x, y + 3); cout << (char)186; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)186;
    Console::SetCursorPosition(x, y + 4); cout << (char)186; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)186;
    Console::SetCursorPosition(x, y + 5); cout << (char)186; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)186;
    Console::SetCursorPosition(x, y + 6); cout << (char)186; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)186;
    Console::SetCursorPosition(x, y + 7); cout << (char)186; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)186;
    Console::SetCursorPosition(x, y + 8); cout << (char)186; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)186;
    Console::SetCursorPosition(x, y + 9); cout << (char)186; for (int i = 1; i <= 11; i++) cout << (char)178; cout << (char)186;
    Console::SetCursorPosition(x, y + 10); cout << (char)200; for (int i = 1; i <= 11; i++) cout << (char)205; cout << (char)188;
}



void rondas(int x) {
    Console::Clear();
    cout << "RONDA: " << x;
    cout << endl << "--------------------";
}

int main()
{
    srand(time(nullptr));
    //rondas ganadas
    int score1 = 0;
    int score2 = 0;

    //partidas ganadas
    float jugador1 = 0;
    float jugador2 = 0;

    // valor de cartas en rondas 
    float value1;
    int carta=0;
    float value2;
    
    //respuestas
    char resp;

    //valor de x
    int posic_x1 = 0;
    int posic_x2 = 65;


    int num_par;
    int opcion = intro();
    int palo;
    
    //continuar turno
    char continuar_turno = 's';

    // comparar resultados

    float jugador_uno_comparar =0;
    float jugador_dos_comparar=0;



    int partidas_perfectas1 = 0;
    int partidas_perfectas2 = 0;




    //prueba
    int perdio = 0;


    switch (opcion)
    {
        case 1: 
            Console::Clear();
            do {
                Console::Clear();
                cout << "Cuantas partidas quieres jugar?"; cin >> num_par;
                if (num_par < 5 || num_par > 10) {
                    cout << "El numero ingresado no cumple con los requisitos." <<endl;
                    _sleep(1000);
                }
            } while (num_par < 5 || num_par > 10);
            
           
            while(num_par != 0) {
                    //visualizar el numero de ronda
                    rondas(num_par);

                    while (continuar_turno == 's' || continuar_turno == 'S') {
                        
                        Console::SetCursorPosition(0, 3); cout << "SCORE JUGADOR 1: " << score1;
                        Console::SetCursorPosition(90, 3); cout << "SCORE JUGADOR 2: " << score2;
                        Console::SetCursorPosition(45, 3); cout << "TURNO DEL JUGADOR 1";
                      
                        carta = generador();
                        if (carta == 8 || carta == 9 || carta == 10 || carta == 11) {
                            value1 = 0.5;
                        }
                        else { 
                            value1 = carta; 
                        }



                        palo = 3 + rand() % (6 + 1 - 3);
                        cartas(posic_x1, 10, carta, palo);
                        jugador1 += value1;

                           
                        if (jugador1 > 7.5) {
                            _sleep(2000);
                            Console::Clear();
                            Console::SetCursorPosition(50, 15); cout << "TURNO DEL JUGADOR 2";
                            _sleep(1000);
                            Console::Clear();
                            break;
                        }

                        if (jugador1 == 7.5) {
                            partidas_perfectas1++;
                            _sleep(2000);
                            Console::Clear();
                            Console::SetCursorPosition(50, 15); cout << " PARTIDA PERFECTA";
                            Console::SetCursorPosition(50, 16); cout << "TURNO DEL JUGADOR 2";
                            _sleep(1000);
                            Console::Clear();
                            break;
                        }

                        Console::SetCursorPosition(0, 23);
                        cout << "                                 ";
                        Console::SetCursorPosition(0, 23);
                        cout << "VALOR ACTUAL: " << jugador1;
                     

                        Console::SetCursorPosition(0, 25);
                        cout << "                                 ";
                        Console::SetCursorPosition(0, 25);
                        cout <<"Quieres seguir? [S]si [N]no "; cin >> continuar_turno;
                        if (continuar_turno=='s'||continuar_turno=='S') {
                            posic_x1 += 10;
                            continue;
                        }
                        if (continuar_turno == 'n' || continuar_turno == 'N') {
                            jugador_uno_comparar = 7.5 - jugador1;
                            break;
                        }
                    }
                    
                    continuar_turno = 's';
                    posic_x1 = 0;


                    while (continuar_turno == 's' || continuar_turno == 'S') {
                        
                        Console::SetCursorPosition(0, 3); cout << "SCORE JUGADOR 1: " << score1;
                        Console::SetCursorPosition(90, 3); cout << "SCORE JUGADOR 2: " << score2;
                        Console::SetCursorPosition(45, 3); cout << "TURNO DEL JUGADOR 2";

                        carta = generador();
                        if (carta == 8 || carta == 9 || carta == 10 || carta == 11) {
                            value2 = 0.5;
                        }
                        else {
                            value2 = carta;
                        }



                        palo = 3 + rand() % (6 + 1 - 3);
                        cartas(posic_x2, 10, carta, palo);
                        jugador2 += value2;


                        if (jugador2 > 7.5) {
                            _sleep(2000);
                            Console::Clear();
                            Console::SetCursorPosition(50, 15); cout << "TURNO DEL JUGADOR 1";
                            _sleep(1000);
                            Console::Clear();
                            break;
                        }

                        if (jugador2 == 7.5) {
                            partidas_perfectas2++;
                            _sleep(2000);
                            Console::Clear();
                            Console::SetCursorPosition(50, 15); cout << " PARTIDA PERFECTA";
                            Console::SetCursorPosition(50, 16); cout << "TURNO DEL JUGADOR 2";
                            _sleep(1000);
                            Console::Clear();
                            break;
                        }

                        Console::SetCursorPosition(65, 23);
                        cout << "                                 ";
                        Console::SetCursorPosition(65, 23);
                        cout << "VALOR ACTUAL: " << jugador2;

                        //borrar ocultar la pregunta de si quiere seguir en el jugador 1
                        Console::SetCursorPosition(0, 25);
                        cout << "                                 ";
                        Console::SetCursorPosition(65, 25);
                        cout << "                                 ";
                        Console::SetCursorPosition(65, 25);
                        cout << "Quieres seguir? [S]si [N]no "; cin >> continuar_turno;
                        if (continuar_turno == 's' || continuar_turno == 'S') {
                            posic_x2 += 10;
                            continue;
                        }
                        if (continuar_turno == 'n' || continuar_turno == 'N') {
                            jugador_dos_comparar = 7.5 - jugador2;
                            break;
                        }
                    }
                    continuar_turno = 's';
                    posic_x2 = 65;

                    if (jugador_uno_comparar < jugador_dos_comparar) {
                        score1++;
                        Console::Clear();
                        Console::SetCursorPosition(50, 15); cout << "Jugador 1 GANO";
                        _sleep(1000);
                    }
                    if(jugador_uno_comparar > jugador_dos_comparar) {
                        score2++;
                        Console::Clear();
                        Console::SetCursorPosition(50, 15); cout << "Jugador 2 GANO";
                        _sleep(1000);
                    }
                    //partidas perfectas => son aquellas donde el jugador alcanza 7.5 en el valor de sus cartas
                    // si son iguales las partidas perfectas
                    if (partidas_perfectas1 > partidas_perfectas2 ) {
                        score1++;
                        Console::Clear();
                        Console::SetCursorPosition(50, 15); cout << "Jugador 1 GANO";
                        _sleep(1000);
                    }
                    if (partidas_perfectas1 < partidas_perfectas2) {
                        score2++;
                        Console::Clear();
                        Console::SetCursorPosition(50, 15); cout << "Jugador 1 GANO";
                        _sleep(1000);
                    }
                    //igualamos a cero para la proxima ronda
                    partidas_perfectas1 = 0;
                    partidas_perfectas2 = 0;
                    jugador_uno_comparar = 0;
                    jugador_dos_comparar = 0;
                    //igualamos los valores actuales de las cartas
                    jugador1 = 0;
                    jugador2 = 0;
                    value1 = 0;
                    value2 = 0;
                    //reducimos en 1 para que pueda terminar el ciclo
                    num_par--;
            }

          


        case 2: 
            Console::Clear();
            cout << "Termino el juego";
            break;

    }
}
